# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout sigma-hack
        uses: actions/checkout@v3
        with:
          path: sigma-hack

      - name: checkout sumo
        uses: actions/checkout@v3
        with:
          repository: 'ontologyportal/sumo'
          path: sumo

      - name: Setup SigmaKEE
        env:
          SIGMA_HOME: ${{ github.workspace }}/sigmakee-runtime
          SIGMA_SRC: ${{ github.workspace }}/sigma-hack
          ONTOLOGYPORTAL_GIT: ${{ github.workspace }}
        working-directory: ${{ github.workspace }}
        run: |
          echo "SIGMA_HOME: $SIGMA_HOME"
          echo "SIGMA_SRC: $SIGMA_SRC"
          echo "ONTOLOGYPORTAL_GIT: $ONTOLOGYPORTAL_GIT"
          mkdir -p $SIGMA_HOME/KBs/WordNetMappings
          cp -R $ONTOLOGYPORTAL_GIT/sumo/* $SIGMA_HOME/KBs
          wget https://wordnetcode.princeton.edu/3.0/WordNet-3.0.tar.bz2
          tar -xf WordNet-3.0.tar.bz2
          cp WordNet-3.0/dict/* $SIGMA_HOME/KBs/WordNetMappings/

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Unit test with Maven
        run: |
          mvn -B test --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_READONLY }}
        working-directory: sigma-hack

      - name: Setup Top Only SigmaKEE
        env:
          SIGMA_HOME: ${{ github.workspace }}/sigmakee-runtime
          SIGMA_SRC: ${{ github.workspace }}/sigma-hack
        working-directory: ${{ github.workspace }}
        run: |
          cp $SIGMA_SRC/target/test-classes/config_topOnly.xml $SIGMA_HOME/KBs/config.xml

      - name: Integration Top Test with Maven
        run: |
          mvn -B verify -Dgroups=com.articulate.sigma.TopOnly --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_READONLY }}
        working-directory: sigma-hack

      - name: Setup Mid-Level SigmaKEE
        env:
          SIGMA_HOME: ${{ github.workspace }}/sigmakee-runtime
          SIGMA_SRC: ${{ github.workspace }}/sigma-hack
        working-directory: ${{ github.workspace }}
        run: |
          cp $SIGMA_SRC/target/test-classes/config_topAndMid.xml $SIGMA_HOME/KBs/config.xml

      - name: Integration Top Test with Maven
        run: |
          mvn -B verify -Dgroups=com.articulate.sigma.MidLevel --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_READONLY }}
        working-directory: sigma-hack

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v3.0.1
        with:
          directory: ${{ github.workspace }}/sigma-hack
          ignore-maven-wrapper: true
